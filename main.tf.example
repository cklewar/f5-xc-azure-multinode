variable "project_prefix" {
  type        = string
  description = "prefix string put in front of string"
  default     = "f5xc"
}

variable "project_suffix" {
  type        = string
  description = "prefix string put at the end of string"
  default     = "02"
}

variable "f5xc_namespace" {
  type    = string
  default = "system"
}

variable "f5xc_azure_region" {
  type    = string
  default = "eastus"
}

variable "f5xc_api_p12_file" {
  type    = string
}

variable "f5xc_api_url" {
  type    = string
}

variable "f5xc_tenant" {
  type    = string
}

variable "f5xc_api_token" {
  type    = string
}

variable "f5xc_azure_cred" {
  type    = string
  default = "sun-az-creds"
}

variable "azure_client_id" {
  type    = string
}

variable "azure_client_secret" {
  type    = string
}

variable "azure_tenant_id" {
  type    = string
}

variable "azure_subscription_id" {
  type    = string
}

variable "ssh_public_key_file" {
  type    = string
}

variable "custom_tags" {
  type    = map(string)
  default = {
    Owner                  = "c.klewar@f5.com"
    f5xc-feature           = "azure-vnet-multinode"
    f5xc-ves-io-creator-id = "c.klewar@f5.com"
  }
}

provider "azurerm" {
  client_id       = var.azure_client_id
  client_secret   = var.azure_client_secret
  tenant_id       = var.azure_tenant_id
  subscription_id = var.azure_subscription_id
  features {
    resource_group {
      prevent_deletion_if_contains_resources = false
    }
  }
  alias = "default"
}

provider "volterra" {
  api_p12_file = var.f5xc_api_p12_file
  url          = var.f5xc_api_url
  alias        = "default"
}

/*module "f5xc_azure_marketplace_agreement_single_nic" {
  source                = "./modules/azure/agreement"
  azure_client_id       = var.azure_client_id
  azure_client_secret   = var.azure_client_secret
  azure_tenant_id       = var.azure_tenant_id
  azure_subscription_id = var.azure_subscription_id
  f5xc_azure_ce_gw_type = "single_nic"
}*/

/*module "f5xc_azure_marketplace_agreement_multi_nic" {
  source                = "./modules/azure/agreement"
  azure_client_id       = var.azure_client_id
  azure_client_secret   = var.azure_client_secret
  azure_tenant_id       = var.azure_tenant_id
  azure_subscription_id = var.azure_subscription_id
  f5xc_azure_ce_gw_type = "multi_nic"
}*/

/*module "f5xc_azure_marketplace_agreement_app_stack" {
  source                = "./modules/azure/agreement"
  azure_client_id       = var.azure_client_id
  azure_client_secret   = var.azure_client_secret
  azure_tenant_id       = var.azure_tenant_id
  azure_subscription_id = var.azure_subscription_id
  f5xc_azure_ce_gw_type = "app_stack"
}*/

/*module "azure_resource_group" {
  source                    = "./modules/azure/resource_group"
  azure_region              = var.f5xc_azure_region
  azure_resource_group_name = format("%s-azure-vnet-%s", var.project_prefix, var.project_suffix)
  providers                 = {
    azurerm = azurerm.default
  }
}*/

module "azure_multi_node_single_nic_new_vnet_new_subnets" {
  # depends_on                          = [module.f5xc_azure_marketplace_agreement_multi_nic]
  source                              = "./modules/f5xc/site/azure"
  f5xc_api_url                        = var.f5xc_api_url
  f5xc_api_token                      = var.f5xc_api_token
  f5xc_namespace                      = var.f5xc_namespace
  f5xc_tenant                         = var.f5xc_tenant
  f5xc_azure_cred                     = var.f5xc_azure_cred
  f5xc_azure_region                   = var.f5xc_azure_region
  f5xc_azure_site_name                = format("%s-mn-sn-nv-ns-%s", var.project_prefix, var.project_suffix)
  f5xc_azure_vnet_site_resource_group = format("%s-mn-sn-nv-ns-rg-%s", var.project_prefix, var.project_suffix)
  f5xc_azure_vnet_primary_ipv4        = "192.168.168.0/21"
  f5xc_azure_ce_gw_type               = "single_nic"
  f5xc_azure_az_nodes                 = {
    node0 : { f5xc_azure_az = "1", f5xc_azure_vnet_local_subnet = "192.168.168.0/24" },
    node1 : { f5xc_azure_az = "1", f5xc_azure_vnet_local_subnet = "192.168.169.0/24" },
    node2 : { f5xc_azure_az = "1", f5xc_azure_vnet_local_subnet = "192.168.170.0/24" }
  }
  f5xc_azure_default_blocked_services = false
  f5xc_azure_default_ce_sw_version    = true
  f5xc_azure_default_ce_os_version    = true
  f5xc_azure_no_worker_nodes          = true
  ssh_public_key                      = file(var.ssh_public_key_file)
  custom_tags                         = var.custom_tags
  providers                           = {
    volterra = volterra.default
    azurerm  = azurerm.default
  }
}

output "azure_multi_node_single_nic_new_vnet_new_subnets" {
  value = module.azure_multi_node_single_nic_new_vnet_new_subnets.vnet
}